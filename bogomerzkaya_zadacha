#Напишите программу, которая реализует игру «Крестики-нолики». Да, это всё условие задачи.

#Ваши классы в этой задаче могут выглядеть так:

#class Cell:
    #  Клетка, у которой есть значения
    #   - занята она или нет
    #   - номер клетки
#    pass

#class Board:
    #  Класс поля, который создаёт у себя экземпляры клетки
 #   pass

#class Player:
    #  У игрока может быть
    #   - имя
    #   - на какую клетку ходит
 #   pass


class Board:
    board = [i for i in range(10)]


    def draw_board(self):

        print("-------------")

        for i in range(3):
            print("|", self.board[0 + i * 3], "|", self.board[1 + i * 3], "|", self.board[2 + i * 3], "|")
            print("-------------")

class Cell:
    board = Board.board
    def take_input(self, player_token):
        self.player_token = player_token

        valid = False
        while not valid:
            player_answer = input("Куда поставим " + player_token + "? ")
            try:
                player_answer = int(player_answer)
            except:
                print("Некорректный ввод. Вы уверены, что ввели число?")
                continue
            if player_answer >= 1 and player_answer <= 9:
                if (str(self.board[player_answer - 1]) not in "XO"):
                    self.board[player_answer - 1] = player_token
                    valid = True
                else:
                    print("Эта клеточка уже занята")
            else:
                print("Некорректный ввод. Введите число от 1 до 9 чтобы походить.")

class Check:
    board = Board.board

    def check_win(self):
        win_coord = ((0, 1, 2), (3, 4, 5), (6, 7, 8), (0, 3, 6),
                     (1, 4, 7), (2, 5, 8), (0, 4, 8), (2, 4, 6))
        for each in win_coord:
            if self.board[each[0]] == self.board[each[1]] == self.board[each[2]]:
                return self.board[each[0]]
        return False

class Player:
    board = Board.board

    def __init__(self, player1_name, player2_name):
        self.player1_name = player1_name
        self.player2_name = player2_name

    def main(self):
        self.player_token = None

        counter = 0
        win = False
        while not win:
            Board.draw_board() # TODO Проблема
            if counter % 2 == 0:
                print(f'Ход {player}')
                self.player_token.take_input("X") # TODO Проблема
            else:
                print(f'Ход {player}')
                self.player_token.take_input("O") # TODO Проблема
            counter += 1
            if counter > 4:
                tmp = self.board.check_win() # TODO Проблема
                if tmp:
                    print(tmp, player, "выиграл!")
                    break
            if counter == 9:
                print("Ничья!")
                break
        Board.draw_board()


player = Player('Васька', 'Компьютер')
player.main() # TODO Проблема

#
#
# def draw_board(board):
#     print("-------------")
#
#     for i in range(3):
#         print("|", board[0 + i * 3], "|", board[1 + i * 3], "|", board[2 + i * 3], "|")
#         print("-------------")
#
# def take_input(player_token):
#
#     valid = False
#     while not valid:
#         player_answer = input("Куда поставим " + player_token + "? ")
#         try:
#             player_answer = int(player_answer)
#         except:
#             print("Некорректный ввод. Вы уверены, что ввели число?")
#             continue
#         if player_answer >= 1 and player_answer <= 9:
#             if (str(board[player_answer - 1]) not in "XO"):
#                 board[player_answer - 1] = player_token
#                 valid = True
#             else:
#                 print("Эта клеточка уже занята")
#         else:
#             print("Некорректный ввод. Введите число от 1 до 9 чтобы походить.")
#
# def check_win(board):
#     win_coord = ((0, 1, 2), (3, 4, 5), (6, 7, 8), (0, 3, 6),
#                  (1, 4, 7), (2, 5, 8), (0, 4, 8), (2, 4, 6))
#     for each in win_coord:
#         if board[each[0]] == board[each[1]] == board[each[2]]:
#             return board[each[0]]
#     return False
#
#
# def main():
#
#     counter = 0
#     win = False
#     while not win:
#         draw_board(board)
#         if counter % 2 == 0:
#             take_input("X")
#         else:
#             take_input("O")
#         counter += 1
#         if counter > 4:
#             tmp = check_win()
#             if tmp:
#                 print(tmp, "выиграл!")
#                 break
#         if counter == 9:
#             print("Ничья!")
#             break
#     draw_board()
#
# board = [i for i in range(1, 10)]
# main()
#
